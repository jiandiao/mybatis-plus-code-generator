package ${package.Controller};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.*;
#else
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import javax.annotation.Resource;
import java.util.Arrays;
import java.util.List;

/**
 * $!{table.comment}
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "${table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @ApiOperation(value = "新增")
    @PostMapping("/save")
    public ${entity} save${entity}(@RequestBody ${entity} ${table.entityPath}) {
	    return ${table.entityPath}Service.save${entity}(${table.entityPath});
	}

    @ApiOperation(value = "详情")
    @GetMapping("/detail/{id}")
    public ${entity} get${entity}(@PathVariable("id") String id) {
	    return ${table.entityPath}Service.get${entity}(id);
	}

    @ApiOperation(value = "修改")
    @PutMapping("/update/{id}")
    public boolean update${entity}(@RequestBody ${entity} ${table.entityPath}) {
	    return ${table.entityPath}Service.update${entity}(${table.entityPath});
	}

    @ApiOperation(value = "删除")
    @DeleteMapping("/remove/{ids}")
    public boolean remove${entity}s(@PathVariable String[] ids) {
	    return ${table.entityPath}Service.remove${entity}s(Arrays.asList(ids));
	}

    @ApiOperation(value = "列表")
	@PostMapping("/list")
    public List<${entity}> getAll${entity}s(@RequestBody ${entity} ${table.entityPath}) {
	    return ${table.entityPath}Service.getAll${entity}s(${table.entityPath});
	}
}

#end