package ${package.Controller};

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import javax.annotation.Resource;
import java.util.List;

/**
 * $!{table.comment}
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "${table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @ApiOperation(value = "新增")
    @PostMapping("/save")
    public Boolean save(@RequestBody ${entity} been) {
	    return ${table.entityPath}Service.save(been);
	}

    @ApiOperation(value = "删除")
    @DeleteMapping("/remove/{id}")
    public Boolean remove(@PathVariable("id") Long id) {
	    return ${table.entityPath}Service.removeById(id);
	}

    @ApiOperation(value = "修改")
    @PostMapping("/update/{id}")
    public Boolean update(@RequestBody ${entity} bean) {
	    return ${table.entityPath}Service.updateById(bean);
	}

    @ApiOperation(value = "详情")
    @GetMapping("/detail/{id}")
    public ${entity} detail(@PathVariable("id") String id) {
	    return ${table.entityPath}Service.getById(id);
	}

    @ApiOperation(value = "列表")
    @GetMapping("/list")
    public List<${entity}> list() {
	    return ${table.entityPath}Service.list(new QueryWrapper<>());
	}

    @ApiOperation(value = "分页")
	@GetMapping("/page")
    public IPage<${entity}> page(@RequestParam(name = "size", defaultValue = "10") Integer size,
                                @RequestParam(name = "current", defaultValue = "1") Integer current) {
	    return ${table.entityPath}Service.page(new Page<>(current, size), new QueryWrapper<>());
	}
}

#end